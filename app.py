import streamlit as st
import pandas as pd
import altair as alt
import io
import os

# Configuration du chemin du projet
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
os.chdir(PROJECT_ROOT)

# Constantes pour le formatage des nombres
FORMAT_CONVENTIONS = {
    'population_axis': {'format': ' >,.0f', 'label_expr': "replace(datum.label, ',', ' ')"},
    'population_table': 'formatted',  # utilise population_formatted
    'year': 'O'  # Ordinal, pas de s√©parateur
}

# Configuration de la page
st.set_page_config(
    page_title="√âvolution de la Population",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Cr√©ation des donn√©es
data = {
    'ann√©e': [1968, 1975, 1982, 1990, 1999, 2010, 2015, 2021],
    'population': [8949, 9550, 9764, 10100, 11491, 14854, 15400, 16000]
}

df = pd.DataFrame(data)

def format_number(x):
    """Formate un nombre selon les conventions fran√ßaises."""
    if pd.isna(x):
        return ""
    return f"{int(x):,}".replace(",", " ")

def validate_formatting(df):
    """Valide que le formatage respecte les conventions."""
    assert 'population_formatted' in df.columns, "La colonne population_formatted est requise"
    assert 'ann√©e' in df.columns, "La colonne ann√©e est requise"
    assert 'population' in df.columns, "La colonne population est requise"
    # V√©rifier que les ann√©es n'ont pas de s√©parateur
    assert all(df['ann√©e'].astype(str).str.match(r'^\d{4}$')), "Les ann√©es doivent √™tre au format YYYY"
    return True

def apply_french_formatting(df):
    """Applique le formatage fran√ßais aux donn√©es."""
    df['population_formatted'] = df['population'].apply(format_number)
    return df

# Ajout d'une colonne format√©e pour les tooltips uniquement
df = apply_french_formatting(df)
validate_formatting(df)

# Cr√©ation du graphique
base = alt.Chart(df).encode(
    x=alt.X('ann√©e:O', title='Ann√©e'),
    y=alt.Y('population:Q', 
            title='Population',
            axis=alt.Axis(
                format=FORMAT_CONVENTIONS['population_axis']['format'],
                labelExpr=FORMAT_CONVENTIONS['population_axis']['label_expr']
            )),
    tooltip=[
        alt.Tooltip('ann√©e:O', title='Ann√©e'),
        alt.Tooltip('population_formatted:N', title='Population')
    ]
)

# Cr√©ation de la ligne
line = base.mark_line(color='#3B825C')

# Cr√©ation des points avec la m√™me couleur, plus petits et sans contour
points = base.mark_point(
    color='#3B825C',
    size=60,
    filled=True
)

# Combinaison de la ligne et des points
chart = (line + points).properties(
    width=800,
    height=400
)

# Affichage du titre
st.title('√âvolution de la Population')

# Affichage du graphique
st.altair_chart(chart, use_container_width=True)

# Cr√©ation de deux colonnes pour le tableau et l'analyse
col_table, col_analysis = st.columns([1, 1])

with col_table:
    # Cr√©ation du DataFrame pour l'affichage
    display_df = pd.DataFrame({
        'Ann√©e': df['ann√©e'],
        'Population': df['population']
    })
    
    st.dataframe(
        display_df,
        hide_index=True,
        column_config={
            "Ann√©e": st.column_config.Column(
                "Ann√©e",
                width="small"
            ),
            "Population": st.column_config.NumberColumn(
                "Population",
                help="Population de la commune",
                format="0"  # Format le plus simple possible pour les entiers
            )
        }
    )

with col_analysis:
    st.write("### Analyse de l'√©volution")
    st.write("""
    L'analyse de l'√©volution de la population sur la p√©riode 1968-2021 r√©v√®le une croissance d√©mographique marqu√©e par deux phases distinctes :

    1. **Une p√©riode de croissance mod√©r√©e (1968-1990)** : La population passe de 8 949 √† 10 100 habitants, soit une augmentation de 12,9% sur 22 ans. Cette p√©riode est caract√©ris√©e par une progression r√©guli√®re mais relativement lente.

    2. **Une acc√©l√©ration soutenue (1990-2021)** : En 31 ans, la population cro√Æt de 58,4%, passant de 10 100 √† 16 000 habitants. Cette phase t√©moigne d'un dynamisme d√©mographique plus marqu√©, avec une augmentation moyenne d'environ 190 habitants par an. La tendance √† l'acc√©l√©ration se maintient jusqu'en 2021, sans signe de ralentissement.

    Sur l'ensemble de la p√©riode, la population a presque doubl√© (+78,8%), passant de 8 949 √† 16 000 habitants. Cette progression constante, sans p√©riode de d√©clin, sugg√®re une attractivit√© territoriale durable.
    """)

    # Ajout des boutons d'export personnalis√©s
    st.write("### T√©l√©charger les donn√©es")
    
    # Pr√©paration des donn√©es pour l'export (donn√©es brutes)
    df_export = df[['ann√©e', 'population']]
    
    # Export CSV
    csv = df_export.to_csv(index=False).encode('utf-8-sig')
    st.download_button(
        label="üì• T√©l√©charger en CSV",
        data=csv,
        file_name="population_data.csv",
        mime="text/csv",
    )
    
    # Export Excel
    buffer = io.BytesIO()
    with pd.ExcelWriter(buffer, engine='xlsxwriter') as writer:
        df_export.to_excel(writer, sheet_name='Population', index=False)
    st.download_button(
        label="üì• T√©l√©charger en Excel",
        data=buffer.getvalue(),
        file_name="population_data.xlsx",
        mime="application/vnd.ms-excel",
    )

# Documentation technique (non visible pour les utilisateurs)
# ### Formatage des nombres
# - Une fonction `format_number` est utilis√©e pour garantir le formatage selon la convention fran√ßaise
# - Les ann√©es sont affich√©es sans s√©parateur (ex: 1968)
# - Les volumes de population suivent deux conventions :
#   1. Dans les tableaux : pas de s√©parateur pour permettre le tri (ex: 16000)
#   2. Dans les graphiques et tooltips : espace comme s√©parateur de milliers selon la convention fran√ßaise (ex: 16 000)
# - La notation scientifique est d√©sactiv√©e pour une meilleure lisibilit√©
# - Les tooltips utilisent le m√™me formatage que l'axe des ordonn√©es pour la coh√©rence
# - Le formatage est uniquement utilis√© pour l'affichage (tooltips, axe Y) et non pour l'export
# - Les donn√©es export√©es sont brutes pour permettre leur r√©utilisation dans d'autres logiciels 